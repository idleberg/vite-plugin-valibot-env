import * as v from 'valibot';

export const schema = v.object({
	PLUGIN_TEST__VALID_BIC: v.pipe(v.string(), v.bic()),
	PLUGIN_TEST__VALID_CREDITCARD: v.pipe(v.string(), v.creditCard()),
	PLUGIN_TEST__VALID_CUID2: v.pipe(v.string(), v.cuid2()),
	PLUGIN_TEST__VALID_EMAIL: v.pipe(v.string(), v.email()),
	PLUGIN_TEST__VALID_EMOJI: v.pipe(v.string(), v.emoji()),
	PLUGIN_TEST__VALID_HASH_ADLER32: v.pipe(v.string(), v.hash(['adler32'])),
	PLUGIN_TEST__VALID_HASH_CRC32: v.pipe(v.string(), v.hash(['crc32'])),
	PLUGIN_TEST__VALID_HASH_CRC32B: v.pipe(v.string(), v.hash(['crc32b'])),
	PLUGIN_TEST__VALID_HASH_MD4: v.pipe(v.string(), v.hash(['md4'])),
	PLUGIN_TEST__VALID_HASH_MD5: v.pipe(v.string(), v.hash(['md5'])),
	PLUGIN_TEST__VALID_HASH_RIPEMD128: v.pipe(v.string(), v.hash(['ripemd128'])),
	PLUGIN_TEST__VALID_HASH_RIPEMD160: v.pipe(v.string(), v.hash(['ripemd160'])),
	PLUGIN_TEST__VALID_HASH_SHA1: v.pipe(v.string(), v.hash(['sha1'])),
	PLUGIN_TEST__VALID_HASH_SHA256: v.pipe(v.string(), v.hash(['sha256'])),
	PLUGIN_TEST__VALID_HASH_SHA384: v.pipe(v.string(), v.hash(['sha384'])),
	PLUGIN_TEST__VALID_HASH_SHA512: v.pipe(v.string(), v.hash(['sha512'])),
	PLUGIN_TEST__VALID_HASH_TIGER128: v.pipe(v.string(), v.hash(['tiger128'])),
	PLUGIN_TEST__VALID_HASH_TIGER160: v.pipe(v.string(), v.hash(['tiger160'])),
	PLUGIN_TEST__VALID_HEXADECIMAL: v.pipe(v.string(), v.hexadecimal()),
	PLUGIN_TEST__VALID_HEXCOLOR_LONG: v.pipe(v.string(), v.hexColor()),
	PLUGIN_TEST__VALID_HEXCOLOR_SHORT: v.pipe(v.string(), v.hexColor()),
	PLUGIN_TEST__VALID_IMEI: v.pipe(v.string(), v.imei()),
	PLUGIN_TEST__VALID_IP: v.pipe(v.string(), v.ip()),
	PLUGIN_TEST__VALID_IPV4: v.pipe(v.string(), v.ipv4()),
	PLUGIN_TEST__VALID_IPV6_LONG: v.pipe(v.string(), v.ipv6()),
	PLUGIN_TEST__VALID_IPV6_SHORT: v.pipe(v.string(), v.ipv6()),
	PLUGIN_TEST__VALID_ISODATE: v.pipe(v.string(), v.isoDate()),
	PLUGIN_TEST__VALID_ISODATETIME: v.pipe(v.string(), v.isoDateTime()),
	PLUGIN_TEST__VALID_ISOTIME: v.pipe(v.string(), v.isoTime()),
	PLUGIN_TEST__VALID_ISOTIMESECOND: v.pipe(v.string(), v.isoTimeSecond()),
	PLUGIN_TEST__VALID_ISOTIMESTAMP: v.pipe(v.string(), v.isoTimestamp()),
	PLUGIN_TEST__VALID_ISOWEEK: v.pipe(v.string(), v.isoWeek()),
	PLUGIN_TEST__VALID_LITERAL: v.union([v.literal('a'), v.literal('b'), v.literal('c')]),
	PLUGIN_TEST__VALID_MAC: v.pipe(v.string(), v.mac()),
	PLUGIN_TEST__VALID_MAC48: v.pipe(v.string(), v.mac48()),
	PLUGIN_TEST__VALID_MAC64: v.pipe(v.string(), v.mac64()),
	PLUGIN_TEST__VALID_OCTAL: v.pipe(v.string(), v.octal()),
	PLUGIN_TEST__VALID_STRING: v.string(),
	PLUGIN_TEST__VALID_ULID: v.pipe(v.string(), v.ulid()),
	PLUGIN_TEST__VALID_URL: v.pipe(v.string(), v.url()),
	PLUGIN_TEST__VALID_UUID: v.pipe(v.string(), v.uuid()),
});
